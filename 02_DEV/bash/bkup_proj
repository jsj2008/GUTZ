#!/bin/bash
# bkup_proj
#
# 
# SYNOPSIS:
#
#     ./bkup_proj [ t [ d ] ]
# 
# 
# DESCRIPTION:
#
#     Copies the iOS project to a backup directory corresponding to 
#     the current timestamp & optionally creates a tarball of it.
# 
#     [ t ]   Generate a tarball of the backup.
#     [ d ]   Remove the copied contents after archival.

#
# 
# EXAMPLE:
# 
#     Backs up the contents, then tarballs it.
#     bkup_proj -t
# 

# [=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]
# [=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]

# -[ usage error ]-
usage_msg=`echo "USAGE:"; echo "bkup_proj [ t [ d ] ]"; echo "bkup_proj -td"`
# [=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]



# -[ project attribs ]-
proj_name="GutzTest"
proj_root="`dirname $0`/../.."
proj_src="${proj_root}/02_DEV/iPhone App"
bkup_path="${proj_root}/04_BACKUP"
scripts_path="${proj_root}/02_DEV/scripts"
assets_path="${proj_root}/01_ASSETS"
# [=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]


#-- printf "proj_name:[%s]\n" $proj_name
#-- printf "proj_root:[%s]\n" $proj_root
#-- printf "proj_src:[%s]\n" $proj_src
#-- printf "bkup_path:[%s]\n" $bkup_path
#-- printf "scripts_path:[%s]\n" $scripts_path
#-- printf "assets_path:[%s]\n" $assets_path


# -[ option flags ]-
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-\_
t_flag=false #-- tarball
d_flag=false #-- delete
# -=-=-=-=-=-=-=-=-=-=-=-=-/⁻


# \\ [ option parser ]\_
# \\~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~\_
while getopts 'td' OPTION; do #-//> there's a '-t'
	case $OPTION in #-/> set flag based on char
		
		t) # )-/> passed in '-t'
			t_flag=true
			;;
			
		
		d) # )-/> passed in '-d'
			d_flag=true
			;;
		
		?) # )-/> passed in all others '-?'
			echo $usage_msg
			exit 1
			;;
	esac
done
# //~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~/⁻



# -[ timestamping ]-
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-\_
date_dir=`date +%Y%m%d` #-- YYYYMMDD
time_dir=`date +%H%M%S` #-- HHMMSS
ts=$(echo "${date_dir}_${time_dir}")
# -=-=-=-=-=-=-=-=-=-=-=-=-/⁻


# -[ script setup ]-
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-\_
echo $'\ec' #-- clear stdout

printf "Moving into project sources... [%s/]\n" "${proj_src}"
cd "${proj_src}" #-- change to the proj's top-lvl


if [ ! -d $bkup_path ]; then #))-\> create top-lvl backup dir
	printf "Creating top-lvl backup dir... [%s/]\n" $bkup_path
	mkdir "${bkup_path}"; fi

if [ ! -d $bkup_path/$date_dir ]; then #))-\> create the date dir if needed
	printf "Creating date dir... [%s/]\n" $date_dir
	mkdir "${bkup_path}/${date_dir}"; fi
# -=-=-=-=-=-=-=-=-=-=-=-=-/⁻



# -[ backup init ]-
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-\_
printf "Creating time dir... [%s/]\n" $time_dir
mkdir "${bkup_path}/${date_dir}/${time_dir}" #-- create the time dir

printf "Copying project contents... "
rsync -h -v -r --exclude-from "${scripts_path}/.ignore.bkup" . "${bkup_path}/${date_dir}/${time_dir}" #-- use rsync to copy, preserving ts / recurse & exclude any svn meta data w/ verbose
rsync -h -v -r --exclude-from "${scripts_path}/.ignore.bkup" "${assets_path}" "${bkup_path}/${date_dir}/${time_dir}" #-- use rsync to copy, preserving ts / recurse & exclude any svn meta data w/ verbose
# -=-=-=-=-=-=-=-=-=-=-=-=-/⁻


# \\ [ archive creation ]\_
# \\~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~\_
if $t_flag ; then #))-\> create tarball
	
	tar_name="${proj_name}_[${date_dir}-${time_dir}].tar" #-- archive name
	printf "\nCreating tarball from contents...\n"
	tar -cf "${bkup_path}/${date_dir}/${tar_name}" "${bkup_path}/${date_dir}/${time_dir}" #-- create tarball w/ contents
	
	printf "\nAdding write permission on tarball for group & other users...\n"
	chmod 766 "${bkup_path}/${date_dir}/${tar_name}"
	
	if $d_flag ; then #))-\> remove backup contents
		printf "Removing time dir w/ contents...\n"
		rm -Rf "${bkup_path}/${date_dir}/${time_dir}"; fi
fi
# //~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~/⁻



# -[ script termination ]-
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-\_
printf "Completed backup, now terminating...\n"
exit 0; #-- complete w/o error
# -=-=-=-=-=-=-=-=-=-=-=-=-/⁻



#rsync -h -v -r --exclude="- .svn*" --exclude="- .DS_Store" . "${bkup_path}/${date_dir}/${time_dir}" #-- use rsync to copy, preserving ts / recurse & exclude any svn meta data w/ verbose
#rsync -h -v -r --exclude="- .svn*" --exclude="- .DS_Store" "../PARTS" "${bkup_path}/${date_dir}/${time_dir}" #-- use rsync to copy, preserving ts / recurse & exclude any svn meta data w/ verbose