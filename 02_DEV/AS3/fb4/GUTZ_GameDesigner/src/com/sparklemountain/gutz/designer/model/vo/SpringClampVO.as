package com.sparklemountain.gutz.designer.model.vo  {		//] includes [!]>	//]=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~.	import flash.geom.Point;		import mx.core.IVisualElement;		import spark.primitives.Line;	//]~=~=~=~=~=~=~=~=~=~=~=~=~=~[]~=~=~=~=~=~=~=~=~=~=~=~=~=~[			// <[!] class delaration [¡]>	public class SpringClampVO extends AbstractClampVO implements iPartVO {	//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._						//] class properties ]>		//]=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~.		public var bodyA:int;		public var bodyB:int;		public var offsetA_pt:Point;		public var offsetB_pt:Point;		public var str:Number;		public var dmp:Number;		// <[=-=-=-=-=-=-=-=-=-=-=-=][=-=-=-=-=-=-=-=-=-=-=-=]>				// <*] class constructor [*>		public function SpringClampVO(idx:int, tid:int, kind:String, body1:int, body2:int, offset1:Point, offset2:Point, s:Number, d:Number, asset:IVisualElement=null) {		//]~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~._						super(idx, tid, kind, new Point(), asset);						bodyA = body1;			bodyB = body2;						offsetA_pt = new Point(offset1.x, offset1.y);			offsetB_pt = new Point(offset2.x, offset2.y);						str = s;			dmp = d;		}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯				//]~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=[>		//]~=~=~=~=~=~=~=~=~=[>								override public function toString():String {		//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._				var ret_str:String = "\n"+this+":\n[=-=-=-=-=-=-=-=-=-=-=-=-=-=]";				ret_str += "\n[ind]: "+this.ind;				ret_str += "\n[type]: "+this.type;				ret_str += "\n[pos_pt]: "+this.pos_pt;				ret_str += "\n[bodyA]: "+this.bodyA;				ret_str += "\n[bodyB]: "+this.bodyA;				ret_str += "\n[offsetA_pt]: "+this.offsetA_pt;				ret_str += "\n[offsetB_pt]: "+this.offsetB_pt;				ret_str += "\n[str]: "+this.str;				ret_str += "\n[dmp]: "+this.dmp;				ret_str += "\n[ui]: "+this.ui;				ret_str += "\n[=-=-=-=-=-=-=-=-=-=-=-=-=-=]";				ret_str += "\n[=-=-=-=-=-=-=-=-=-=-=-=-=-=]";						return (ret_str + "\n");		}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯	}}