<?xml version="1.0" encoding="utf-8"?>

<!-- -=[ START OF LEVEL EDITOR UI ]=- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- -->
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:mx="library://ns.adobe.com/flex/mx" 
				   
				   initialize="uponInit(event)" 
				   creationComplete="uponCreation(event)" 
				   addedToStage="uponStageAdoption(event)" 
				   width="100%" height="100%">
	<!-- ////////////////////////////////////////////////// -->
	
	<!-- -=[ MXML SCRIPT ]=- -->
	<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=- -->
	<fx:Script>
		<![CDATA[
			import cc.gullinbursti.lang.Strings;
			
			import com.sparklemountain.gutz.designer.ComponentConsts;
			import com.sparklemountain.gutz.designer.EditorConsts;
			import com.sparklemountain.gutz.designer.FileIOConsts;
			import com.sparklemountain.gutz.designer.model.delegate.AbstractPlistParser;
			import com.sparklemountain.gutz.designer.model.vo.GoalVO;
			import com.sparklemountain.gutz.designer.model.vo.RangedTrapVO;
			import com.sparklemountain.gutz.designer.model.vo.StudVO;
			import com.sparklemountain.gutz.designer.model.vo.WallVO;
			
			import mx.core.IVisualElement;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.events.SliderEvent;
			
			import spark.core.SpriteVisualElement;
			//]~=~=~=~=~=~=~=~=~=~=~=~=~=~[]~=~=~=~=~=~=~=~=~=~=~=~=~=~[
			
			
			//] UI PROPERTIES ]>
			//]=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~.
			public static const UI_TITLE:String = "GUTZ Level Editor";
			
			private var _actTrapVO:RangedTrapVO;
			
			private var _goalVO_arr:Array;
			private var _wallVO_arr:Array;
			private var _trapVO_arr:Array;
			private var _studVO_arr:Array;
			
			private var _plist_str:String;
			private var _lvl_ind:int;
			
			private var _plist_fileRef:FileReference;
			
			[Bindable] private var _trapVal_min:int;
			[Bindable] private var _trapVal_max:int;
			[Bindable] private var _trapVal_spd:Number;
			
			private var _canvasWrapper:UIComponent;
			//[¡]~=~=~=~=~=~=~=~=~=~=~=~=~=~[!]~=~=~=~=~=~=~=~=~=~=~=~=~=~[¡].
			
			
			//*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*/
			//* *\[ UI EVENT HANDLERS ]/*
			//*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*\
			
			private function uponInit(e:FlexEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".uponInit() [:_:]");
				
				_canvasWrapper = new UIComponent();
				ctnCanvas.addElement(_canvasWrapper);
				
				
				_lvl_ind = 1;
				this.flush();
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function uponCreation(e:FlexEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".uponCreation("+e.toString()+") [:_:]");
				
				/*
				var holder_sprite:Sprite;
				
				holder_sprite = new Sprite();
				holder_sprite.y = 16;
				holder_sprite.addChild(new Goal_mc());
				uiLvlGoal.addChild(holder_sprite);
				
				holder_sprite = new Sprite();
				holder_sprite.y = 64;
				holder_sprite.addChild(new Wall1_mc());
				uiLvlGoal.addChild(holder_sprite);
				
				holder_sprite = new Sprite();
				holder_sprite.y = 128;
				holder_sprite.addChild(new Wall2_mc());
				uiLvlGoal.addChild(holder_sprite);
				*/
				
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function uponStageAdoption(e:Event):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".uponAdoption("+e.toString()+") [:_:]");
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			//*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*/
			//* *\[ MXML UI HANDLERS ]/*
			//*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*\
			
			private function hdlLoadPlistBtn_Click(e:MouseEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".hdlLoadPlistBtn_Click() [:_:]");
				
				_plist_fileRef.addEventListener(Event.SELECT, hdlPlist_Select);
				_plist_fileRef.browse([new FileFilter("Property List", "*.plist")]);
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function hdlSavePlistBtn_Click(e:MouseEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".hdlSavePlistBtn_Click() [:_:]");
				
				this.writePlist();
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			
			private function hdlGoalBtn_Click(e:MouseEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".hdlGoalBtn_Click("+(e.target as Button).id+") [:_:]");
				
				var trg_btn:Button = e.target as Button;
				var goal_mc:MovieClip;
				var type_id:int;
				
				trg_btn.enabled = false;
				
				switch (trg_btn.id) {
					case "btnGoalStart":
						goal_mc = new GoalStart_mc() as MovieClip;
						type_id = 1;
						break;
					
					case "btnGoalEnd":
						goal_mc = new GoalEnd_mc() as MovieClip;
						type_id = 2;
						break;
				}
				
				//var goal_mc:Goal_mc = new Goal_mc();
				goal_mc.x = EditorConsts.CANVAS_CENTER.x;
				goal_mc.y = EditorConsts.CANVAS_CENTER.y;
				goal_mc.buttonMode = true;
				goal_mc.useHandCursor = true;
				goal_mc.addEventListener(MouseEvent.MOUSE_DOWN, hdlGoal_Press);
				goal_mc.addEventListener(MouseEvent.MOUSE_UP, hdlGoal_Release);
					
					
				_goalVO_arr.push(new GoalVO(_goalVO_arr.length, type_id, EditorConsts.CANVAS_CENTER, goal_mc));
				_canvasWrapper.addChild(goal_mc);
				lblCoords.text = "("+goal_mc.x+", "+goal_mc.y+")";
				
				btnMin.enabled = false;
				btnMax.enabled = false;
				
				this.updCanvas();
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function hdlWall1Btn_Click(e:MouseEvent):void {
				//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".hdlWall1Btn_Click() [:_:]");
				
				var wall_mc:Wall1_mc = new Wall1_mc();
					wall_mc.x = EditorConsts.CANVAS_CENTER.x;
					wall_mc.y = EditorConsts.CANVAS_CENTER.y;
					wall_mc.buttonMode = true;
					wall_mc.useHandCursor = true;
					wall_mc.addEventListener(MouseEvent.MOUSE_DOWN, hdlWall_Press);
					wall_mc.addEventListener(MouseEvent.MOUSE_UP, hdlWall_Release);
				
				
				_wallVO_arr.push(new WallVO(_wallVO_arr.length, 1, wall_mc, EditorConsts.CANVAS_CENTER, 0.5, 0.1));
				_canvasWrapper.addChild(wall_mc);
				lblCoords.text = "("+wall_mc.x+", "+wall_mc.y+")";
				
				btnMin.enabled = false;
				btnMax.enabled = false;
				
				this.updCanvas();
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function hdlWall2Btn_Click(e:MouseEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".hdlWall2Btn_Click() [:_:]");
				
				var wall_mc:Wall2_mc = new Wall2_mc();
					wall_mc.x = EditorConsts.CANVAS_CENTER.x;
					wall_mc.y = EditorConsts.CANVAS_CENTER.y;
					wall_mc.buttonMode = true;
					wall_mc.useHandCursor = true;
					wall_mc.addEventListener(MouseEvent.MOUSE_DOWN, hdlWall_Press);
					wall_mc.addEventListener(MouseEvent.MOUSE_UP, hdlWall_Release);
				
				
				_wallVO_arr.push(new WallVO(_wallVO_arr.length, 2, wall_mc, EditorConsts.CANVAS_CENTER, 0.5, 0.1));
				_canvasWrapper.addChild(wall_mc);
				lblCoords.text = "("+wall_mc.x+", "+wall_mc.y+")";
				
				btnMin.enabled = false;
				btnMax.enabled = false;
				
				this.updCanvas();
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function hdlVTrapBtn_Click(e:MouseEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".hdlVTrapBtn_Click() [:_:]");
				
				var trap_mc:TrapV_mc = new TrapV_mc();
					trap_mc.x = EditorConsts.CANVAS_CENTER.x;
					trap_mc.y = EditorConsts.CANVAS_CENTER.y;
					trap_mc.buttonMode = true;
					trap_mc.useHandCursor = true;
					trap_mc.addEventListener(MouseEvent.MOUSE_DOWN, hdlTrap_Press);
					trap_mc.addEventListener(MouseEvent.MOUSE_UP, hdlTrap_Release);
					
				
				_trapVO_arr.push(new RangedTrapVO(_trapVO_arr.length, 2, trap_mc, EditorConsts.CANVAS_CENTER, new Point(EditorConsts.CANVAS_CENTER.y, EditorConsts.CANVAS_CENTER.y), 1.0, true));
				_canvasWrapper.addChild(trap_mc);
				lblCoords.text = "("+trap_mc.x+", "+trap_mc.y+")";
				
				_actTrapVO = this.findTrapVOByMC(trap_mc);
				_trapVal_min = _actTrapVO.range_pt.x;
				_trapVal_max = _actTrapVO.range_pt.y;
				btnMin.enabled = true;
				btnMax.enabled = true;
				
				this.updCanvas();
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function hdlHTrapBtn_Click(e:MouseEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".hdlHTrapBtn_Click() [:_:]");
				
				var trap_mc:TrapH_mc = new TrapH_mc();
					trap_mc.x = EditorConsts.CANVAS_CENTER.x;
					trap_mc.y = EditorConsts.CANVAS_CENTER.y;
					trap_mc.buttonMode = true;
					trap_mc.useHandCursor = true;
					trap_mc.addEventListener(MouseEvent.MOUSE_DOWN, hdlTrap_Press);
					trap_mc.addEventListener(MouseEvent.MOUSE_UP, hdlTrap_Release);
					
				
				_trapVO_arr.push(new RangedTrapVO(_trapVO_arr.length, 1, trap_mc, EditorConsts.CANVAS_CENTER, new Point(EditorConsts.CANVAS_CENTER.x, EditorConsts.CANVAS_CENTER.x), 1.0, false));
				_canvasWrapper.addChild(trap_mc);
				lblCoords.text = "("+trap_mc.x+", "+trap_mc.y+")";
				
				_actTrapVO = this.findTrapVOByMC(trap_mc);
				_trapVal_min = _actTrapVO.range_pt.x;
				_trapVal_max = _actTrapVO.range_pt.y;
				btnMin.enabled = true;
				btnMax.enabled = true;
				
				this.updCanvas();
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function hdlStudBtn_Click(e:MouseEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".hdlStudBtn_Click() [:_:]");
				
				var stud_mc:GoalStart_mc = new GoalStart_mc();
					stud_mc.x = EditorConsts.CANVAS_CENTER.x;
					stud_mc.y = EditorConsts.CANVAS_CENTER.y;
					stud_mc.buttonMode = true;
					stud_mc.useHandCursor = true;
					stud_mc.addEventListener(MouseEvent.MOUSE_DOWN, hdlStud_Press);
					stud_mc.addEventListener(MouseEvent.MOUSE_UP, hdlStud_Release);
				
				
				_studVO_arr.push(new StudVO(_studVO_arr.length, stud_mc, EditorConsts.CANVAS_CENTER, 16, 0.5, 0.1));
				_canvasWrapper.addChild(stud_mc);
				lblCoords.text = "("+stud_mc.x+", "+stud_mc.y+")";
				
				btnMin.enabled = false;
				btnMax.enabled = false;
				
				this.updCanvas();
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function hdlTrapSpdSld_Change(e:SliderEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".hdlTrapSpdSld_Change() [:_:]");
				
				_trapVal_spd = sldSpd.value * 0.5;
				this.updTrapRange();
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function hdlClearCanvas_Click(e:MouseEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".hdlClearCanvas_Click() [:_:]");
				
				while (_canvasWrapper.numChildren > 0) {
					for (var i:Number=0; i<_canvasWrapper.numChildren; i++)
						_canvasWrapper.removeChild(_canvasWrapper.getChildAt(i) as MovieClip);
				}
				
				this.flush();
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function hdlTrapMinBtn_Click(e:MouseEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".hdlTrapMinBtn_Click() [:_:]");
				
				if (_actTrapVO.type_id == 1) {
					_trapVal_min = _actTrapVO.pos_pt.x;
					_actTrapVO.range_pt.x = _actTrapVO.pos_pt.x;
				
				} else {
					_trapVal_min = _actTrapVO.pos_pt.y;
					_actTrapVO.range_pt.x = _actTrapVO.pos_pt.y;
				}
				
				this.updTrapRange();
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function hdlTrapMaxBtn_Click(e:MouseEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".hdlTrapMaxBtn_Click() [:_:]");
				
				if (_actTrapVO.type_id == 1) {
					_trapVal_max = _actTrapVO.pos_pt.x;
					_actTrapVO.range_pt.y = _actTrapVO.pos_pt.x;
					
				} else {
					_trapVal_max = _actTrapVO.pos_pt.y;
					_actTrapVO.range_pt.y = _actTrapVO.pos_pt.y;
				}
				
				this.updTrapRange();
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function hdlCanvas_Click(e:MouseEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				//trace ("[:_:] "+this.className+".hdlCanvas_Click("+new Point(e.localX, e.localY)+") [:_:]");
				
				//this.addNextPart(new Point(e.localX, e.localY));
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			
			
			
			//*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*/
			//* *\[ WORKER METHODS ]/*
			//*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*\
			
			
			private function hdlGoal_Press(e:MouseEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				//trace ("[:_:] "+this.className+".hdlGoal_Press("+(e.currentTarget as MovieClip)+") [:_:]");
				
				var trg_mc:MovieClip = e.currentTarget as MovieClip;
					trg_mc.startDrag(false, new Rectangle((trg_mc.width * 0.5) << 0, (trg_mc.height * 0.5) << 0, ctnCanvas.width - trg_mc.width, ctnCanvas.height - trg_mc.height));
				
				btnMin.enabled = false;
				btnMax.enabled = false;
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
				
			private function hdlGoal_Release(e:MouseEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				//trace ("[:_:] "+this.className+".hdlGoal_Release("+(e.currentTarget as MovieClip)+") [:_:]");
				
				var trg_mc:MovieClip = e.currentTarget as MovieClip;
					trg_mc.stopDrag();
					
				
				this.updGoalVO(trg_mc);
				this.updPlistContent();
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			
			private function hdlStud_Press(e:MouseEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				//trace ("[:_:] "+this.className+".hdlStud_Press("+(e.currentTarget as MovieClip)+") [:_:]");
				
				var trg_mc:MovieClip = e.currentTarget as MovieClip;
					trg_mc.startDrag(false, new Rectangle((trg_mc.width * 0.5) << 0, (trg_mc.height * 0.5) << 0, ctnCanvas.width - trg_mc.width, ctnCanvas.height - trg_mc.height));
				
				btnMin.enabled = false;
				btnMax.enabled = false;
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function hdlStud_Release(e:MouseEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				//trace ("[:_:] "+this.className+".hdlStud_Release("+(e.currentTarget as MovieClip)+") [:_:]");
				
				var trg_mc:MovieClip = e.currentTarget as MovieClip;
					trg_mc.stopDrag();
				
				
				this.updStudVO(trg_mc);
				this.updPlistContent();
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			
			private function hdlWall_Press(e:MouseEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				//trace ("[:_:] "+this.className+".hdlWall_Press("+(e.currentTarget as MovieClip)+") [:_:]");
				
				var trg_mc:MovieClip = e.currentTarget as MovieClip;
					trg_mc.startDrag(false, new Rectangle((trg_mc.width * 0.5) << 0, (trg_mc.height * 0.5) << 0, ctnCanvas.width - trg_mc.width, ctnCanvas.height - trg_mc.height));
				
				btnMin.enabled = false;
				btnMax.enabled = false;
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			
			private function hdlWall_Release(e:MouseEvent):void {
				//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				//trace ("[:_:] "+this.className+".hdlWall_Release("+(e.currentTarget as MovieClip)+") [:_:]");
				
				var trg_mc:MovieClip = e.currentTarget as MovieClip;
					trg_mc.stopDrag();
				
				
				this.updWallVO(trg_mc);
				this.updPlistContent();
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function hdlTrap_Press(e:MouseEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".hdlTrap_Press() [:_:]");
				
				var trg_mc:MovieClip = e.currentTarget as MovieClip;
				var drag_rect:Rectangle;
				
				_actTrapVO = this.findTrapVOByMC(trg_mc);
				_trapVal_min = _actTrapVO.range_pt.x;
				_trapVal_max = _actTrapVO.range_pt.y;
				
				drag_rect = new Rectangle((trg_mc.width * 0.5) << 0, (trg_mc.height * 0.5) << 0, ctnCanvas.width - trg_mc.width, ctnCanvas.height - trg_mc.height);
				
				/*
				if (_actTrapVO.type_id == 1)
					drag_rect = new Rectangle((trg_mc.width * 0.5) << 0, trg_mc.y, ctnCanvas.width - trg_mc.width, 0);
				
				else
					drag_rect = new Rectangle(trg_mc.x, (trg_mc.height * 0.5) << 0, 0, ctnCanvas.height - trg_mc.height);
				*/
				
				trg_mc.startDrag(false, drag_rect);
				
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function hdlTrap_Release(e:MouseEvent):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".hdlTrap_Release() [:_:]");
				
				var trg_mc:MovieClip = e.currentTarget as MovieClip;
					trg_mc.stopDrag();
				
				btnMin.enabled = true;
				btnMax.enabled = true;
					
				this.updTrapVO(trg_mc);
				this.updPlistContent();
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			
			private function findTrapVOByMC(trg_mc:MovieClip):RangedTrapVO {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				//trace ("[:_:] "+this.className+".updCanvas() [:_:]");
				
				var trapVO:RangedTrapVO;
				
				for (var i:Number=0; i<_trapVO_arr.length; i++) {
					trapVO = _trapVO_arr[i] as RangedTrapVO;
					
					if (trapVO.asset_mc == trg_mc)
						return (trapVO);	
				}
				
				return (null);
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
				
			private function dropByMC(trg_mc:MovieClip):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				//trace ("[:_:] "+this.className+".updCanvas() [:_:]");
				
				var i:Number;
				var mc:MovieClip;
				
				
				for (i=0; i<_goalVO_arr.length; i++) {
					mc = (_goalVO_arr[i] as GoalVO).asset_mc;
					
					if (mc == trg_mc) {
						_goalVO_arr.splice(i, 1);
						break;
					}
				}
				
				
				for (i=0; i<_wallVO_arr.length; i++) {
					mc = (_wallVO_arr[i] as WallVO).asset_mc;
					
					if (mc == trg_mc) {
						_wallVO_arr.splice(i, 1);
						break;
					}
				}
				
				for (i=0; i<_trapVO_arr.length; i++) {
					mc = (_trapVO_arr[i] as RangedTrapVO).asset_mc;
					
					if (mc == trg_mc) {
						_trapVO_arr.splice(i, 1);
						break;
					}
				}
				
				
				for (i=0; i<_studVO_arr.length; i++) {
					mc = (_studVO_arr[i] as StudVO).asset_mc;
					
					if (mc == trg_mc) {
						_studVO_arr.splice(i, 1);
						break;
					}
				}
				
				for (i=0; i<_canvasWrapper.numChildren; i++) {
					mc = _canvasWrapper.getChildAt(i) as MovieClip;
					
					if (mc == trg_mc) {
						_canvasWrapper.removeChild(mc);
						break;
					}
				}
					
				
				
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			private function updCanvas():void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				//trace ("[:_:] "+this.className+".updCanvas() [:_:]");
				
				btnClearCanvas.enabled = (_canvasWrapper.numChildren > 0);
				this.updPlistContent();
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			
			private function updGoalVO(trg_mc:MovieClip):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				//trace ("[:_:] "+this.className+".updGoalVO("+trg_mc+") [:_:]");
				
				var goalVO:GoalVO;
				for (var i:Number=0; i<_goalVO_arr.length; i++) {
					goalVO = _goalVO_arr[i]as GoalVO;
					
					if (trg_mc == goalVO.asset_mc) {
						goalVO.pos_pt.x = trg_mc.x;
						goalVO.pos_pt.y = trg_mc.y;
					}
				}
				
				lblCoords.text = "("+trg_mc.x+", "+trg_mc.y+")";
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function updWallVO(trg_mc:MovieClip):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				//trace ("[:_:] "+this.className+".updWallVO("+trg_mc+") [:_:]");
				
				var wallVO:WallVO;
				for (var i:Number=0; i<_wallVO_arr.length; i++) {
					wallVO = _wallVO_arr[i]as WallVO;
					
					if (trg_mc == wallVO.asset_mc) {
						wallVO.pos_pt.x = trg_mc.x;
						wallVO.pos_pt.y = trg_mc.y;
					}
				}
				
				lblCoords.text = "("+trg_mc.x+", "+trg_mc.y+")";
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			private function updTrapRange():void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				//trace ("[:_:] "+this.className+".updWallVO("+trg_mc+") [:_:]");
				
				var trapVO:RangedTrapVO;
				for (var i:Number=0; i<_trapVO_arr.length; i++) {
					trapVO = _trapVO_arr[i]as RangedTrapVO;
					
					if (_actTrapVO == trapVO) {
						trapVO.range_pt.x = _trapVal_min;
						trapVO.range_pt.y = _trapVal_max;
						trapVO.spd = _trapVal_spd;
					}
				}
				
				this.updPlistContent();
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function updTrapVO(trg_mc:MovieClip):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				//trace ("[:_:] "+this.className+".updWallVO("+trg_mc+") [:_:]");
				
				var trapVO:RangedTrapVO;
				for (var i:Number=0; i<_trapVO_arr.length; i++) {
					trapVO = _trapVO_arr[i]as RangedTrapVO;
					
					if (trg_mc == trapVO.asset_mc) {
						trapVO.pos_pt.x = trg_mc.x;
						trapVO.pos_pt.y = trg_mc.y;
					}
				}
				
				lblCoords.text = "("+trg_mc.x+", "+trg_mc.y+")";
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			private function updStudVO(trg_mc:MovieClip):void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				//trace ("[:_:] "+this.className+".updGoalVO("+trg_mc+") [:_:]");
				
				var studVO:StudVO;
				for (var i:Number=0; i<_studVO_arr.length; i++) {
					studVO = _studVO_arr[i]as StudVO;
					
					if (trg_mc == studVO.asset_mc) {
						studVO.pos_pt.x = trg_mc.x;
						studVO.pos_pt.y = trg_mc.y;
					}
				}
				
				lblCoords.text = "("+trg_mc.x+", "+trg_mc.y+")";
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			private function flush():void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".flush() [:_:]");
				
				_goalVO_arr = new Array();
				_wallVO_arr = new Array();
				_trapVO_arr = new Array();
				_studVO_arr = new Array();
				
				btnGoalStart.enabled = true;
				btnGoalEnd.enabled = true;
				
				btnMin.enabled = false;
				btnMax.enabled = false;
				
				_plist_str = "";
				txtPlistOutput.text = "";
				
				_trapVal_spd = 0;
				
				lblCoords.text = "";
				btnClearCanvas.enabled = false;
				
				this.updPlistContent();
				
				_plist_fileRef = new FileReference();
				_plist_fileRef = File.documentsDirectory.resolvePath(FileIOConsts.DIR_PATHNAME + "\\" + FileIOConsts.FILE_PATHNAME);
				_plist_fileRef.addEventListener(Event.CANCEL, function(e:Event):void {
					trace("File save select canceled.");
					_plist_fileRef = null;
				});
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			
			
			//*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*/
			//* *\[ PLIST METHODS ]/*
			//*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*\
			
			private function updPlistContent():void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".updPlistContent() [:_:]");
				
				_plist_str = "";
				_plist_str += FileIOConsts.PLIST_HEADER;
				_plist_str += this.writeWalls();
				_plist_str += this.writeStuds();
				_plist_str += this.writeGoals();
				_plist_str += this.writeTraps();
				_plist_str += FileIOConsts.PLIST_FOOTER;
				
				txtPlistOutput.text = _plist_str.replace(/\t/g, "   ");
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			
			private function writeWalls():String {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				//trace ("[:_:] "+this.className+".writeWalls("+(_wallVO_arr.length)+") [:_:]");
				
				var str:String = FileIOConsts.WALL_PREGRP;
				var vo_arr:Array;
				var vo:WallVO;
				
				for (var i:Number=0; i<_wallVO_arr.length; i++) {
					vo = _wallVO_arr[i] as WallVO;
					
					str += FileIOConsts.WALL_PRETAG + String(vo.ind);
					str += FileIOConsts.WALL_TYPE + String(vo.type_id);
					str += FileIOConsts.WALL_POS_X + String(vo.pos_pt.x);
					str += FileIOConsts.WALL_POS_Y + String(EditorConsts.CANVAS_SIZE.height - vo.pos_pt.y);
					str += FileIOConsts.WALL_FRICT + String(vo.friction_amt);
					str += FileIOConsts.WALL_BOUNCE + String(vo.bounce_amt);
					str += FileIOConsts.WALL_POSTTAG;
				}
				
				return (str + FileIOConsts.WALL_POSTGRP);
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			
			private function writeGoals():String {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				//trace ("[:_:] "+this.className+".writeGoals("+_goalVO_arr.length+") [:_:]");
				
				var str:String = FileIOConsts.GOAL_PREGRP;
				var vo:GoalVO;
				
				for (var i:Number=0; i<_goalVO_arr.length; i++) {
					vo = _goalVO_arr[i] as GoalVO;
					
					str += FileIOConsts.GOAL_PRETAG + String(vo.id);
					str += FileIOConsts.GOAL_TYPE + String(vo.type_id);
					str += FileIOConsts.GOAL_POS_X + String(vo.pos_pt.x);
					str += FileIOConsts.GOAL_POS_Y + String(EditorConsts.CANVAS_SIZE.height - vo.pos_pt.y);
					str += FileIOConsts.GOAL_POSTTAG;
				}
				
				return (str + FileIOConsts.GOAL_POSTGRP);
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function writeStuds():String {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				//trace ("[:_:] "+this.className+".writeStuds("+_studVO_arr.length+") [:_:]");
				
				var str:String = FileIOConsts.STUD_PREGRP;
				var vo:StudVO;
				
				for (var i:Number=0; i<_studVO_arr.length; i++) {
					vo = _studVO_arr[i] as StudVO;
					
					str += FileIOConsts.STUD_PRETAG + String(vo.id);
					str += FileIOConsts.STUD_TYPE + String(vo.type_id);
					str += FileIOConsts.STUD_POS_X + String(vo.pos_pt.x);
					str += FileIOConsts.STUD_POS_Y + String(EditorConsts.CANVAS_SIZE.height - vo.pos_pt.y);
					str += FileIOConsts.STUD_RAD + String(vo.radius);
					str += FileIOConsts.STUD_FRICT + String(vo.friction_amt);
					str += FileIOConsts.STUD_BOUNCE + String(vo.bounce_amt);
					str += FileIOConsts.STUD_POSTTAG;
				}
				
				return (str + FileIOConsts.STUD_POSTGRP);
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function writeTraps():String {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				//trace ("[:_:] "+this.className+".writeTraps("+_trapVO_arr.length+") [:_:]");
				
				var str:String = FileIOConsts.TRAP_PREGRP;
				var vo:RangedTrapVO;
				
				for (var i:Number=0; i<_trapVO_arr.length; i++) {
					vo = _trapVO_arr[i] as RangedTrapVO;
					
					str += FileIOConsts.TRAP_PRETAG + String(vo.ind);
					str += FileIOConsts.TRAP_TYPE + String(vo.type_id);
					str += FileIOConsts.TRAP_POS_X + String(vo.pos_pt.x);
					str += FileIOConsts.TRAP_POS_Y + String(EditorConsts.CANVAS_SIZE.height - vo.pos_pt.y);
					
					if (vo.type_id == 1) {
						str += FileIOConsts.TRAP_MIN + String(vo.range_pt.x);
						str += FileIOConsts.TRAP_MAX + String(vo.range_pt.y);
					} else {
						str += FileIOConsts.TRAP_MIN + String(EditorConsts.CANVAS_SIZE.height - vo.range_pt.y);
						str += FileIOConsts.TRAP_MAX + String(EditorConsts.CANVAS_SIZE.height - vo.range_pt.x);
					}
					str += FileIOConsts.TRAP_SPD + String(vo.spd);
					str += FileIOConsts.TRAP_POSTTAG;
				}
				
				return (str + FileIOConsts.TRAP_POSTGRP);
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function writePlist():void {
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				//trace ("[:_:] "+this.className+".writePlist(["+(FileIOConsts.DIR_PATHNAME + "\\" + FileIOConsts.FILE_PATHNAME)+"]["+File.documentsDirectory.resolvePath(FileIOConsts.DIR_PATHNAME + "\\" + FileIOConsts.FILE_PATHNAME)+"]) [:_:]");
				
				_plist_fileRef.save(_plist_str, FileIOConsts.LEVEL_PLIST_NAME + String(Strings.prependZeroes(String(_lvl_ind) + FileIOConsts.PLIST_EXT, int(_lvl_ind < 10))));
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function parsePlist(parser:AbstractPlistParser):void {	
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".parsePlist() [:_:]");
				
				
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function hdlPlist_Select(e:Event):void {	
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".hdlPlist_Select() [:_:]");
				
				_plist_fileRef.addEventListener(IOErrorEvent.IO_ERROR, function(e:IOErrorEvent):void {
					trace("Error loading file : " + e.text);
				});
				
				_plist_fileRef.addEventListener(Event.COMPLETE, hdlPlist_LoadComplete);
				_plist_fileRef.removeEventListener(Event.SELECT, hdlPlist_Select);
				_plist_fileRef.load();
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
			
			private function hdlPlist_LoadComplete(e:Event):void {	
			//~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~~*~._
				trace ("[:_:] "+this.className+".hdlPlist_LoadComplete("+(_plist_fileRef.data.length)+") [:_:]");
				
				var file_str:String = _plist_fileRef.data.readUTFBytes(_plist_fileRef.data.length).toString();
				
				_plist_fileRef.removeEventListener(Event.COMPLETE, hdlPlist_LoadComplete);
				txtPlistOutput.text = file_str;
				
				this.parsePlist(new AbstractPlistParser(XML(file_str)));
			}//]~*~~*~~*~~*~~*~~*~~*~~*~~·¯
			
		//*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~·¯
		//*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*·¯

		]]>
	</fx:Script>
	<!-- /////////////////////////////// -->
	
	<!-- -=[ FX OBJS ]=- -->
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		
		<fx:Array id="arrToolTips">
			<fx:String>Level Goal</fx:String>
			<fx:String>Star Goal</fx:String>
			<fx:String>Short Wall</fx:String>
			<fx:String>Long Wall</fx:String>
		</fx:Array>
	</fx:Declarations>
	<!-- /////////////////////////////// -->
	
	
	<!-- -=[ MXML UI ]=- -->
	<!-- =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
	<s:Panel id="pnlTools" title="—Tools—" x="{ComponentConsts.APP_PADDING_L}" y="{ComponentConsts.APP_PADDING_T}" width="128" height="480">
		<s:layout>
			<s:HorizontalLayout verticalAlign="top" horizontalAlign="center" />
		</s:layout>
		<s:VGroup id="grpTools" paddingTop="8">
			<!-- <mx:UIComponent id="uiLvlGoal" width="36" height="39" toolTip="Level Goal" /> -->
			<!-- <s:BitmapImage id="bmpGoal" source="@Embed('../../../../../../assets/images/LevelGoal.png')" width="36" height="39" /> --> 
			<s:Button id="btnGoalStart" label="Start Goal" width="80" click="hdlGoalBtn_Click(event)" />
			<s:Button id="btnGoalEnd" label="End Goal" width="80" click="hdlGoalBtn_Click(event)" />
			<s:Button id="btnWall1" label="Short Wall" width="80" click="hdlWall1Btn_Click(event)" />
			<s:Button id="btnWall2" label="Long Wall" width="80" click="hdlWall2Btn_Click(event)" />
			<s:Button id="btnVTrap" label="V-Trap" width="80" click="hdlVTrapBtn_Click(event)" />
			<s:Button id="btnHTrap" label="H-Trap" width="80" click="hdlHTrapBtn_Click(event)" />
			<s:Button id="btnStud" label="Stud" width="80" click="hdlStudBtn_Click(event)" />
			<s:Button id="btnLoadPlist" y="320" width="80" height="64" label="Load Plist…" click="hdlLoadPlistBtn_Click(event)" />
			<s:Button id="btnSavePlist" y="320" width="80" height="64" label="Save Plist…" click="hdlSavePlistBtn_Click(event)" />
			<s:Label id="lblCoords" y="4" width="80" text="" />
		</s:VGroup>
	</s:Panel>
	
	<s:Group id="grpCanvas" x="160" y="{ComponentConsts.APP_PADDING_T}">
		<s:Group id="grpGuides">
			<s:Line xFrom="160" xTo="160" yFrom="0" yTo="480"><s:stroke><s:SolidColorStroke color="#b5bdc3" /></s:stroke></s:Line>
			<s:Line xFrom="0" xTo="320" yFrom="240" yTo="240"><s:stroke><s:SolidColorStroke color="#b5bdc3" /></s:stroke></s:Line>
		</s:Group>
		<s:BorderContainer id="ctnCanvas" width="320" height="480" backgroundAlpha="0" />
			
		<s:HGroup y="480">
			<s:Button id="btnClearCanvas" label="Clear Canvas" x="256" width="128" height="32" click="hdlClearCanvas_Click(event)" enabled="false" />
			<s:Button id="btnMin" label="MIN: {_trapVal_min}" width="96" click="hdlTrapMinBtn_Click(event)" enabled="false" />
			<s:Button id="btnMax" label="MAX: {_trapVal_max}" width="96" click="hdlTrapMaxBtn_Click(event)" enabled="false" />
			<mx:Slider id="sldSpd" value="{_trapVal_spd}" width="96" useHandCursor="true" change="hdlTrapSpdSld_Change(event)" enabled="true" />
		</s:HGroup>
	</s:Group>
	
	<s:TextArea id="txtPlistOutput" x="496" y="{ComponentConsts.APP_PADDING_T}" width="284" height="480" contentBackgroundColor="#e8e7cf" color="#1c0b22" lineBreak="explicit" editable="false"  />
	<!-- /////////////////////////////// -->
	
</s:BorderContainer>
<!-- -=[ END OF LEVEL EDITOR UI ]=- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- -->