package {		import flash.display.BitmapData;	import flash.display.Graphics;	import flash.display.MovieClip;	import flash.geom.Matrix;	import flash.geom.Point;	import flash.geom.Rectangle;		public class CircleMaker {						private var _src_mc:MovieClip;		private var _bmpData:BitmapData;		private var _circleVO_arr:Array;		private var _jointVO_arr:Array;				private static const PLIST_HEAD:String = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n";		private static const CIRCLE_PREGRP:String = "\t<key>circles</key>\n\t<array>\n";		private static const CIRCLE_POSTGRP:String = "\t</array>\n";		private static const CIRCLE_PRETAG:String = "\t\t<dict>\n\t\t\t<key>id</key>\n\t\t\t<integer>";		private static const CIRCLE_POS_X:String = "</integer>\n\t\t\t<key>x</key>\n\t\t\t<integer>";		private static const CIRCLE_POS_Y:String = "</integer>\n\t\t\t<key>y</key>\n\t\t\t<integer>";		private static const CIRCLE_RADIUS:String = "</integer>\n\t\t\t<key>radius</key>\n\t\t\t<integer>";		private static const CIRCLE_POSTTAG:String ="</integer>\n\t\t</dict>\n";				private static const JOINT_PREGRP:String = "\t<key>joints</key>\n\t<array>\n";		private static const JOINT_POSTGRP:String = "\t</array>\n";		private static const JOINT_PRETAG:String = "\t\t<dict>\n\t\t\t<key>id</key>\n\t\t\t<integer>";		private static const JOINT_BODY_A:String = "</integer>\n\t\t\t<key>body1</key>\n\t\t\t<integer>";		private static const JOINT_BODY_B:String = "</integer>\n\t\t\t<key>body2</key>\n\t\t\t<integer>";		private static const JOINT_STR:String = "</integer>\n\t\t\t<key>str</key>\n\t\t\t<integer>";		private static const JOINT_DMP:String = "</integer>\n\t\t\t<key>damp</key>\n\t\t\t<integer>";		private static const JOINT_POSTTAG:String ="</integer>\n\t\t</dict>\n";				private static const PLIST_TAIL:String = "</dict>\n</plist>"						public function CircleMaker() {			// constructor code						var i:Number;						_circleVO_arr = new Array();			_jointVO_arr = new Array();						for (i=0; i<10; i++)				_circleVO_arr.push(new CircleVO(i, new Point(i, i), ((Math.random() * 62) << 0) + 2));											for (i=0; i<10; i++)				_jointVO_arr.push(new JointVO(i, i, (i % 9), new Point(), new Point(), (Math.random() * 62) + 2, Math.random()));									//var rect:Rectangle = _src_mc.getBounds(_src_mc);			//_bmpData = new BitmapData((rect.width + 0.5) << 0, (rect.height + 0.5) << 0, true, 0);			//_bmpData.draw(_src_mc, new Matrix(1, 0, 0, 1, -rect.x, -rect.y));					}						private function findDist():void {						var dist_pt:Point = new Point();		}								private function makeCircle(pos:Point, rad:int):void {			//var g:Graphics = this.graphics;		}								public function writeData():void {						var i:Number;			var plist_str:String = "";						plist_str += PLIST_HEAD;			plist_str += CIRCLE_PREGRP;						for (i=0; i<_circleVO_arr.length; i++) {				plist_str += CIRCLE_PRETAG + String((_circleVO_arr[i] as CircleVO).id);				plist_str += CIRCLE_POS_X + String((_circleVO_arr[i] as CircleVO).pos_pt.x);				plist_str += CIRCLE_POS_Y + String((_circleVO_arr[i] as CircleVO).pos_pt.y);				plist_str += CIRCLE_RADIUS + String((_circleVO_arr[i] as CircleVO).radius);				plist_str += CIRCLE_POSTTAG;			}						plist_str += CIRCLE_POSTGRP;			plist_str += JOINT_PREGRP;						for (i=0; i<_jointVO_arr.length; i++) {				plist_str += JOINT_PRETAG + String((_jointVO_arr[i] as JointVO).id);				plist_str += JOINT_BODY_A + String((_jointVO_arr[i] as JointVO).bodyA);				plist_str += JOINT_BODY_B + String((_jointVO_arr[i] as JointVO).bodyB);				plist_str += JOINT_STR + String((_jointVO_arr[i] as JointVO).str);				plist_str += JOINT_DMP + String((_jointVO_arr[i] as JointVO).dmp);				plist_str += JOINT_POSTTAG;			}						plist_str += JOINT_POSTGRP;			plist_str += PLIST_TAIL;									trace (plist_str);		}	}}