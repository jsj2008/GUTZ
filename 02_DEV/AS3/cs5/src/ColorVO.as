package  {		public class ColorVO {				public var red:uint;		public var green:uint;		public var blue:uint;				public var rgb:uint;				public function ColorVO(r:uint=0x00, g:uint=0x00, b:uint=0x00) {						red = r;			green = g;			blue = b;			rgb = (r << 16) | (g << 8) | (b);			//rgb = blue + ((green + 0x0000ff) + (red + 0x00ffff));									//trace ("ColorVO:["+red+", "+green+", "+blue+"] // ["+rgb+"]");		}						public function setRGB(comp:uint=0x000000):void {						rgb = comp;						red = comp >> 16;			green = (comp >> 8) & 0xff;			blue = comp & 0xff;									//trace ("ColorVO.setRGB:["+red+", "+green+", "+blue+"] // ["+rgb+"]");		}						public function setRGBColors(r:uint=0x00, g:uint=0x00, b:uint=0x00):void {						red = r;			green = g;			blue = b;			rgb = (r << 16) | (g << 8) | (b);			//rgb = blue + ((green + 0x0000ff) + (red + 0x00ffff));									//trace ("ColorVO.setRGBColors:["+red+", "+green+", "+blue+"] // ["+rgb+"]");		}						public function setRed(amt:uint=0x00):void {						red = amt >> 16;			rgb = (this.red << 16) | (this.green << 8) | (this.blue);		}				public function setGreen(amt:uint=0x00):void {						green = amt >> 8;			rgb = (this.red << 16) | (this.green << 8) | (this.blue);		}				public function setBlue(amt:uint=0x00):void {						blue = amt;			rgb = (this.red << 16) | (this.green << 8) | (this.blue);		}	}}